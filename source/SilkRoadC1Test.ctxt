#BlueJ class context
comment0.target=SilkRoadC1Test
comment1.params=
comment1.target=void\ prelude()
comment10.params=
comment10.target=void\ accordingPMshouldNotAllowLocationsOuttaBounds()
comment11.params=
comment11.target=void\ accordingPMshouldRemoveStoresAtPositionsGiven()
comment11.text=\r\n\ elminacion\ de\ tiendas\ ---------------------------------------------------------------\r\n\ 1)\ cuando\ se\ eliminan\ todas\ las\ tiendas\ deben\ quedar\ cero\ tiendas\ disponibles\r\n\ 2)\ no\ se\ puede\ elminar\ tiendas\ que\ no\ existan\r\n\ 3)\ cuando\ se\ quiera\ eliminar\ una\ tienda,\ esta\ tiene\ que\ estar\ dentro\ de\ los\ lims\ del\ mapa\r\n
comment12.params=
comment12.target=void\ accordingPMshouldNotRemoveUnexistingStores()
comment13.params=
comment13.target=void\ accordingPMshoudlOnlyRemoveWithinBounds()
comment14.params=
comment14.target=void\ accordingPMshouldCreateRobotsAtPositiionsGiven()
comment14.text=\r\n\ creacion\ de\ robots\ ------------------------------------------------------------------\r\n\ 1)\ robots\ deben\ ser\ creados\ en\ la\ posicion\ dada\ con\ una\ cantidad\ 0\ inicial\ de\ dinero\ \r\n\ 2)\ robots\ deben\ estar\ dentro\ de\ los\ limites\r\n\ 3)\ robots\ deven\ tener\ posiciones\ unicas\ dentro\ del\ mapa\ al\ aparecer\r\n\ 4)\ si\ una\ tienda\ fue\ puesta\ en\ x,\ un\ robot\ no\ puede\ aparecer\ en\ x\r\n
comment15.params=
comment15.target=void\ accordingPMshouldNotPlaceRobotsOuttaBounds()
comment16.params=
comment16.target=void\ accordingPMshouldNotBePossibleToPlaceTwoRobotsAtSameSpot()
comment17.params=
comment17.target=void\ accordingPMshouldNotBePossibleToPlaceARobotWhereAStoreWassPlaced()
comment18.params=
comment18.target=void\ accordingPMshouldNotBePossibleToRemoveUnexistingRobots()
comment18.text=\r\n\ eliminacion\ de\ robots\ ---------------------------------------------------------------\r\n\ 1)\ no\ se\ pueden\ eliminar\ robots\ que\ no\ existan\r\n\ 2)\ se\ deben\ eliminar\ robots\ dentro\ del\ rango\ de\ la\ ruta\r\n\ 3)\ si\ se\ eliminan\ los\ robots,\ consultRobots\ debe\ dar\ un\ array\ vacio\r\n
comment19.params=
comment19.target=void\ accordingPMshouldNotBePossibleToRemoveRobotsOuttaBounds()
comment2.params=
comment2.target=void\ accordingPMshouldCreateRoadWithSpcifiedLength()
comment2.text=\r\n\ constructores\ -----------------------------------------------------------------------\r\n\ 1)\ El\ primer\ constructor\ debe\ crear\ la\ ruta\ con\ la\ longitud\ especificada\r\n\ 2)\ El\ primer\ constructor\ debe\ crear\ solo\ rutas\ con\ longitudes\ positivas\r\n\ 3)\ Cuando\ se\ usa\ el\ segundo\ constructor\ se\ debe\ tomar\ el\ valor\ mas\ grande\ en\ la\ posicion\ days[i][1]\ +\ 1\ para\ armar\ la\ ruta\r\n\ 4)\ No\ se\ puede\ crear\ una\ ruta\ con\ input\ nulo\r\n\ 5)\ No\ se\ pueden\ dar\ valores\ negativos\ en\ el\ input\r\n
comment20.params=
comment20.target=void\ accordingPMshouldNotBeElementsWithinArrayReturnedByConsultRobotsAfterRemovingAllRobots()
comment21.params=
comment21.target=void\ accordingPMshouldOnlyBePossibleToMoverExistingRobots()
comment21.text=\r\n\ moviendo\ el\ robot\ -------------------------------------------------------------------\r\n\ 1)\ solo\ se\ pueden\ mover\ robots\ que\ existan\ (posiciones\ con\ robots\ como\ spawn)\r\n\ 2)\ los\ movimientos\ solo\ pueden\ mover\ al\ robot\ dentro\ de\ los\ limites\r\n\ 3)\ los\ robots\ se\ deben\ mover\ siempre\ que\ sea\ posible\r\n\ 4)\ todos\ los\ robots\ pueden\ estar\ en\ un\ solo\ chunk\ (siempre\ y\ cuando\ no\ reaparezcan\ ahi)\r\n
comment22.params=
comment22.target=void\ accordingPMshouldOnlyBePossibleToMoverRobotsWithinRoadBounds()
comment23.params=
comment23.target=void\ accordingPMshouldMoveRobotsAsLongItsPossible()
comment24.params=
comment24.target=void\ accordingPMshouldBePossibleToHaveAllRobotsInTheSameChunk()
comment25.params=
comment25.target=void\ accordingPMshouldAllRobotsComeBackOnceReboot()
comment25.text=\r\n\ reboot\ ------------------------------------------------------------------------------\r\n\ 1)\ todos\ los\ robots\ y\ tiendas\ deben\ volver\ a\ sus\ posiciones\ iniciales\ cuando\ se\ haga\r\n\ un\ reboot\r\n
comment3.params=
comment3.target=void\ accordingPMshouldNotAllowNegagiveLengts()
comment4.params=
comment4.target=void\ accordingPMshouldCreateRoadWithLength6()
comment5.params=
comment5.target=void\ accordingPMshouldNotAllowNullInput()
comment6.params=
comment6.target=void\ accordingPMshouldNotAllowNegativeValuesInInput()
comment7.params=
comment7.target=void\ accordingPMshouldPlaceStoresAtPositionsGivenWithCorrectAmountOfTenges()
comment7.text=\r\n\ creacion\ de\ tiendas\ -----------------------------------------------------------------\r\n\ 1)\ las\ tiendas\ se\ crean\ en\ el\ orden\ que\ se\ provee\ pero\ se\ devuelven\ en\ orden\ de\ la\ ruta\r\n\ 2)\ no\ se\ puede\ crear\ una\ tienda\ en\ el\ mismo\ lugar\ dos\ veces\r\n\ 3)\ no\ se\ puede\ crear\ una\ tienda\ con\ tenges\ negativos\r\n\ 4)\ no\ se\ pueden\ poner\ tiendas\ en\ posiciones\ negativas\ ni\ mayores\ a\ la\ longitud\ de\ la\ ruta\r\n
comment8.params=
comment8.target=void\ accordingPMshouldNotPlaceStoreAtSameSpotTwice()
comment9.params=
comment9.target=void\ accordingPMshouldOnlyAccpetPostiveTenges()
numComments=26
